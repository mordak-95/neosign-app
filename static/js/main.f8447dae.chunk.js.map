{"version":3,"sources":["Components/Main/img/portrait.jpg","Components/Header/Header.js","Components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","class","id","href","type","data-toggle","data-target","props","mainId","src","img","alt","title","description","App","state","mains","Portrait","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,sC,0PCI5B,G,MAAA,WACb,OACE,6BACI,yBAAKC,MAAM,wDAAwDC,GAAG,cAClE,yBAAKD,MAAM,aACP,uBAAGE,KAAK,IAAIF,MAAM,gBAAlB,YACA,4BAAQA,MAAM,8BAA8BG,KAAK,SAASC,cAAY,WAAWC,cAAY,WACzF,0BAAML,MAAM,yBAEhB,yBAAKA,MAAM,2BAA2BC,GAAG,UACrC,wBAAID,MAAM,sBACN,wBAAIA,MAAM,YACN,uBAAGE,KAAK,UAAUF,MAAM,YAAxB,WAEJ,wBAAIA,MAAM,YACN,uBAAGE,KAAK,UAAUF,MAAM,YAAxB,WAEJ,wBAAIA,MAAM,YACN,uBAAGE,KAAK,UAAUF,MAAM,YAAxB,WAEJ,wBAAIA,MAAM,YACN,uBAAGE,KAAK,UAAUF,MAAM,YAAxB,kBCpBb,G,MAAA,SAACM,GAEZ,OACE,6BACE,yBAAKN,MAAM,mCAAmCC,GAAIK,EAAMC,QACpD,yBAAKP,MAAM,8EACP,yBAAKQ,IAAKF,EAAMG,IAAKC,IAAI,GAAGV,MAAM,mBAClC,wBAAIA,MAAM,0CAA0CM,EAAMK,OAC1D,wBAAIX,MAAM,WAAWM,EAAMM,kBCkB5BC,E,4MAtBbC,MAAQ,CACNC,MAAO,CACL,CAACN,IAAIO,IAAUL,MAAM,cAAeC,YAAY,8CAA+CL,OAAO,Y,uDAKxG,OACE,6BAEI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAME,IAAKQ,KAAKH,MAAMC,MAAM,GAAGN,IAAKE,MAAOM,KAAKH,MAAMC,MAAM,GAAGJ,MAAOC,YAAaK,KAAKH,MAAMC,MAAM,GAAGH,cACvG,kBAAC,EAAD,CAAMH,IAAKQ,KAAKH,MAAMC,MAAM,GAAGN,IAAKE,MAAOM,KAAKH,MAAMC,MAAM,GAAGJ,MAAOC,YAAaK,KAAKH,MAAMC,MAAM,GAAGH,YAAaL,OAAQU,KAAKH,MAAMC,MAAM,GAAGR,SAChJ,kBAAC,EAAD,CAAME,IAAKQ,KAAKH,MAAMC,MAAM,GAAGN,IAAKE,MAAOM,KAAKH,MAAMC,MAAM,GAAGJ,MAAOC,YAAaK,KAAKH,MAAMC,MAAM,GAAGH,YAAaL,OAAQ,WAC5H,kBAAC,EAAD,CAAME,IAAKQ,KAAKH,MAAMC,MAAM,GAAGN,IAAKE,MAAOM,KAAKH,MAAMC,MAAM,GAAGJ,MAAOC,YAAaK,KAAKH,MAAMC,MAAM,GAAGH,YAAaL,OAAQ,WAC5H,kBAAC,EAAD,CAAME,IAAKQ,KAAKH,MAAMC,MAAM,GAAGN,IAAKE,MAAOM,KAAKH,MAAMC,MAAM,GAAGJ,MAAOC,YAAaK,KAAKH,MAAMC,MAAM,GAAGH,YAAaL,OAAQ,gB,GAjBpHW,aCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f8447dae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portrait.570f6b1f.jpg\";","import React from 'react';\r\nimport './Header.css';\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\" id=\"nav-scroll\">\r\n            <div class=\"container\">\r\n                <a href=\"#\" class=\"navbar-brand\">NEO-SIGN</a>\r\n                <button class=\"navbar-toggler outline-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div class=\"collapse navbar-collapse\" id=\"navbar\">\r\n                    <ul class=\"navbar-nav ml-auto\">\r\n                        <li class=\"nav-item\">\r\n                            <a href=\"#main-1\" class=\"nav-link\">Main 1</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a href=\"#main-2\" class=\"nav-link\">Main 2</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a href=\"#main-3\" class=\"nav-link\">Main 3</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a href=\"#main-4\" class=\"nav-link\">Main 4</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport './Main.css';\r\n\r\n\r\n\r\nexport default (props) => {\r\n    \r\n    return (\r\n      <div>\r\n        <div class=\"cover container-fluid text-white\" id={props.mainId}>\r\n            <div class=\"cover-content d-flex flex-column justify-content-center align-items-center\">\r\n                <img src={props.img} alt=\"\" class=\"rounded-circle\"/>\r\n                <h1 class=\"display-2 text-capitalize pt-4 pt-md-0\">{props.title}</h1>\r\n                <h6 class=\"pt-3 h4\">{props.description}</h6>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };","import React , {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport Portrait from './Components/Main/img/portrait.jpg'\nimport Header from './Components/Header/Header';\nimport Main from './Components/Main/Main';\n\nclass App extends Component {\n\n  state = {\n    mains: [\n      {img:Portrait, title:'I Am Mordak', description:'Graphic Artist - Web Designer - Illustrator', mainId:'main-1'}\n    ],\n  }\n\n  render(){\n    return (\n      <div >\n        \n          <Header></Header>\n          <Main img={this.state.mains[0].img} title={this.state.mains[0].title} description={this.state.mains[0].description}></Main>\n          <Main img={this.state.mains[0].img} title={this.state.mains[0].title} description={this.state.mains[0].description} mainId={this.state.mains[0].mainId}></Main>\n          <Main img={this.state.mains[0].img} title={this.state.mains[0].title} description={this.state.mains[0].description} mainId={'main-2'}></Main>\n          <Main img={this.state.mains[0].img} title={this.state.mains[0].title} description={this.state.mains[0].description} mainId={'main-3'}></Main>\n          <Main img={this.state.mains[0].img} title={this.state.mains[0].title} description={this.state.mains[0].description} mainId={'main-4'}></Main>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}